input {
  udp {
    port => 9995
    type => netflow
    codec => netflow
    workers => 16
    queue_size => 3000
    receive_buffer_bytes => 16777216
  }
}
filter {
  translate {
    field => "[netflow][protocol]"
    destination => "[protocol_name]"
    override => "true"
    dictionary => { "6" => "TCP"
                    "17" => "UDP"
                    "1" => "ICMP"
                    "47" => "GRE"
                    "50" => "ESP"
                    "89" => "OSPFIGP"
                    "115" => "L2TP"
                    "4" => "IPv4" }
  }
  if [netflow][ipv4_dst_addr] !~ /^10\x2E0\x2E[0-9][0-9]*[0-9]*\x2E.+$|^172\x2E[1-3][0-6]\x2E[0-9]*[0-9]*[0-9]*\x2E.+$|^11\x2E0\x2E197\x2E.+$/ {
    translate {
      field => "[netflow][l4_dst_port]"
      destination => "[port_name]"
      override => "true"
      dictionary => { "53" => "DNS"
                      "443" => "HTTPS"
                      "143" => "IMAP"
                      "80" => "HTTP"
                      "22" => "SSH"
                      "21" => "FTP"
                      "3389" => "RDP"
                      "1194" => "OpenVPN"
                      "1723" => "PPTP"
                      "1701" => "L2TP"
                      "500" => "ISAKMP"
                      "4500" => "IPsec" }
     }
    geoip {
      source => "[netflow][ipv4_dst_addr]"
      #target => "dst_geoip"
      cache_size => 200
      database => "/opt/geoip/GeoLite2-City.mmdb"
      #add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
      #add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}" ]
    }
  }

  mutate {
    #convert => [ "[geoip][coordinates]", "float" ]
    add_field => { "ipv4_src_host" => "%{[netflow][ipv4_src_addr]}" }
    add_field => { "ipv4_dst_host" => "%{[netflow][ipv4_dst_addr]}" }
  }

  if [ipv4_src_host] =~ /^10\x2E0\x2E[1,2][9,0][0-9]\x2E.+$|172\x2E16\x2E[2-4]\x2E.+$/ {
    dns {
      reverse => ["ipv4_src_host"]
      action => "replace"
      nameserver => ["ad_address"]
      hit_cache_size => 8000
      hit_cache_ttl => 1800
      failed_cache_size => 1000
      failed_cache_ttl => 600
    }
    dns {
      reverse => ["ipv4_dst_host"]
      action => "replace"
      nameserver => ["ad_address"]
      hit_cache_size => 8000
      hit_cache_ttl => 1800
      failed_cache_size => 1000
      failed_cache_ttl => 600
    }
  }
}

output {
        if ( [type] == "netflow" ) {
                elasticsearch {
                        hosts => "ip_elasticsearch:9200"
                        index => "logstash-netflow-%{host}-%{+YYYY.MM.dd}"
                }
        } else {
                elasticsearch {
                        hosts => "ip_elasticsearch:9200"
                        index => "logstash-%{type}-%{+YYYY.MM.dd}"
                }
        }
}
